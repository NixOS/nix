Summary: The Nix software deployment system
Name: nix
Version: @PACKAGE_VERSION@
Release: 2%{?dist}
License: LGPLv2+
URL: http://nixos.org/
Source0: %{name}-%{version}.tar.bz2
Requires: curl
Requires: bzip2
Requires: sqlite
Requires: libcurl
Requires: xz
Requires: openssl
Requires: libsodium
Requires: libseccomp
BuildRequires: make
BuildRequires: gcc-c++
BuildRequires: bzip2-devel
BuildRequires: sqlite-devel
BuildRequires: libcurl-devel
BuildRequires: xz-devel
BuildRequires: openssl-devel
BuildRequires: libsodium-devel
BuildRequires: libseccomp-devel

%description
Nix is a purely functional package manager. It allows multiple
versions of a package to be installed side-by-side, ensures that
dependency specifications are complete, supports atomic upgrades and
rollbacks, allows non-root users to install software, and has many
other features. It is the basis of the NixOS Linux distribution, but
it can be used equally well under other Unix systems.

%package        devel
Summary:        Development files for %{name}
Requires:       %{name}%{?_isa} = %{version}-%{release}

%description   devel
The %{name}-devel package contains libraries and header files for
developing applications that use %{name}.


%package doc
Summary:        Documentation files for %{name}
BuildArch:      noarch
Requires:       %{name} = %{version}-%{release}

%description   doc
The %{name}-doc package contains documentation files for %{name}.

%prep
%autosetup


%build
# - override docdir so large documentation files are owned by the
#   -doc subpackage
# - set localstatedir by hand to the preferred nix value
%configure --localstatedir=/nix/var \
           --docdir=%{_defaultdocdir}/%{name}-doc-%{version} \
           --with-init-system=systemd
%make_build


%install
%make_install

# make the store
mkdir -p %{buildroot}/nix/store
chmod 1775 %{buildroot}/nix/store

# make per-user directories
for d in profiles gcroots;
do
  mkdir -p %{buildroot}/nix/var/nix/$d/per-user
  chmod 1777 %{buildroot}/nix/var/nix/$d/per-user
done

# fix permission of nix profile
# (until this is fixed in the relevant Makefile)
chmod -x %{buildroot}%{_sysconfdir}/profile.d/nix.sh

# we ship this file in the base package
rm -f %{buildroot}%{_defaultdocdir}/%{name}-doc-%{version}/README


%clean
rm -rf %{buildroot}
make clean


%post
@post_install_linux@

%preun
@pre_remove_linux@

%postun
@post_remove_linux@


%files
%{_bindir}/nix*
%{_libdir}/*.so
%{_prefix}/libexec/*
%{_prefix}/lib/systemd/system/nix-daemon.socket
%{_prefix}/lib/systemd/system/nix-daemon.service
%{_datadir}/nix
%{_mandir}/man1/*.1*
%{_mandir}/man5/*.5*
%{_mandir}/man8/*.8*
%{_sysconfdir}/profile.d/nix.sh
%{_sysconfdir}/profile.d/nix-daemon.sh
/nix

%files devel
%{_includedir}/nix
%{_prefix}/lib/pkgconfig/*.pc

%files doc
%docdir %{_defaultdocdir}/%{name}-doc-%{version}
%{_defaultdocdir}/%{name}-doc-%{version}
