<chapter xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      version="5.0"
      xml:id="ch-installing-binary">

<title>Install Nix from a binary</title>

<para>TODO: differences between single vs multi user.</para>

<section xml:id="sect-single-user-installation">
<title>Set up a single-user installation</title>

<para>In a single-user installation of Nix, <filename>/nix</filename> is owned by the invoking user. This means you should run the install command under your usual user account, <emphasis>not</emphasis> as root.</para>

<para>By default, Nix is installed as a single-user installation:

<screen>
  $ sh &lt;(curl https://nixos.org/nix/install)
</screen>

<para> To explicitly install a single-user installation, use <command>--no-daemon</command>:

<screen>
  sh &lt;(curl https://nixos.org/nix/install) --no-daemon
</screen>
</para>

<para>
The script invokes <command>sudo</command> to create <filename>/nix</filename> if it doesn’t already exist. If you don’t have <command>sudo</command>, manually create <command>/nix</command> first as root:

<screen>
$ mkdir /nix
$ chown alice /nix
</screen>

The install script modifies the first writable file from <filename>.bash_profile</filename>, <filename>.bash_login</filename>, and <filename>.profile</filename> to source <filename>~/.nix-profile/etc/profile.d/nix.sh</filename>. To disable this behaviour, set the <command>NIX_INSTALLER_NO_MODIFY_PROFILE</command> environment
variable before executing the install script.</para>

</section>
<section xml:id="sect-single-user-uninstall">
<title>Uninstall a single-user installation</title>

<para>To uninstall a single-user installation:

<screen>
$ rm -rf /nix
</screen>

</para>
</section>

<section xml:id="sect-multi-user-installation">
  <title>Set up a multi-user installation</title>
  <para>
    In a multi-user installation of Nix, the install script creates system users, and a system service for the Nix daemon. This is only supported on:
  </para>

  <itemizedlist>
    <listitem>
      <para>Linux running systemd, with SELinux disabled</para>
    </listitem>
    <listitem><para>macOS</para></listitem>
  </itemizedlist>

  <para>By default, the multi-user installation creates build users between
    the user IDs 30001 and 30032, and a group with the group ID 30000.</para>
  
  <note><para>
    If you need Nix to use a different group ID or user ID set, <link linkend="sect-nix-install-binary-tarball"> download the tarball manually and edit the install script</link>.
  </para></note>

  <para>
    To install a multi-user installation on your system:

    <screen>
  sh &lt;(curl https://nixos.org/nix/install) --daemon
</screen>
  </para>

  <para>You should run this under your usual user account,<emphasis>not</emphasis> as root. The script invokes <command>sudo</command> as needed.
  </para>

  <para>
    The installer modifies <filename>/etc/bashrc</filename> and <filename>/etc/zshrc</filename> (if they exist), but first backs up these files with a <literal>.backup-before-nix</literal> extension. The installer also creates <filename>/etc/profile.d/nix.sh</filename>.
  </para>

</section>
<section xml:id="sect-multi-user-uninstall">
<title>Uninstall a multi-user installation</title>

<para>To uninstall a multi-user installation:

<screen>
sudo rm -rf /etc/profile/nix.sh /etc/nix /nix ~root/.nix-profile ~root/.nix-defexpr ~root/.nix-channels ~/.nix-profile ~/.nix-defexpr ~/.nix-channels

# If you are on Linux with systemd, you will need to run:
sudo systemctl stop nix-daemon.socket
sudo systemctl stop nix-daemon.service
sudo systemctl disable nix-daemon.socket
sudo systemctl disable nix-daemon.service
sudo systemctl daemon-reload

# If you are on macOS, you will need to run:
sudo launchctl unload /Library/LaunchDaemons/org.nixos.nix-daemon.plist
sudo rm /Library/LaunchDaemons/org.nixos.nix-daemon.plist
</screen>

You can also remove any references to Nix in <filename>/etc/profile</filename>, <filename>/etc/bashrc</filename>, and <filename>/etc/zshrc</filename>.
</para>

</section>

<section xml:id="sect-nix-install-pinned-version-url">
  <title>Install a specific Nix version from a URL</title>

  <para>For any Nix version since 1.11.16, you can run:

  <screen>
  sh &lt;(curl https://nixos.org/releases/nix/nix-VERSION/install)
</screen>
  </para>
</section>

<section xml:id="sect-nix-install-binary-tarball">
  <title>Install from a binary tarball</title>
  <para>
    If you need to edit the multi-user installation script to use different group ID or a different user ID range, you can download a binary tarball that contains Nix and all its dependencies:
  </para>

<procedure>

<step><para>Download the binary tarball. (This is what the install script at <uri>https://nixos.org/nix/install</uri> does automatically.)</para></step>

<step><para>Unpack it somewhere (e.g. in <filename>/tmp</filename>).</para></step>

<step><para>If you need to edit the multi-user installation script, modify the variables set in the file named <filename>install-multi-user</filename>.</para></step>

<step><para>Run the script named <command>install</command> inside the binary tarball:

<screen>
alice$ cd /tmp
alice$ tar xfj nix-1.8-x86_64-darwin.tar.bz2
alice$ cd nix-1.8-x86_64-darwin
alice$ ./install
</screen>
</para></step>

  
</section>
</chapter>
